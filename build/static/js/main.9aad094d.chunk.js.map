{"version":3,"sources":["DragDropFile.js","DataInput.js","OutTable.js","SheetJSApp.js","index.js"],"names":["DragDropFile","props","suppress","evt","stopPropagation","preventDefault","className","onDrop","files","dataTransfer","handleFile","onDragEnter","onDragOver","children","DataInput","SheetJSFT","map","x","join","htmlFor","type","id","accept","onChange","e","target","OutTable","useState","format","setFormat","data","length","onClick","document","querySelectorAll","forEach","console","log","firstChild","innerHTML","insertAdjacentHTML","remove","querySelector","style","display","setAttribute","content","outerHTML","replace","arrow","addEventListener","event","classList","toggle","elementChildren","parentNode","elem","value","onMouseOut","copyText","navigator","clipboard","writeText","data-clipboard-target","r","i","cols","c","key","SheetJSApp","state","setState","make_cols","refstr","o","C","XLSX","utils","decode_range","name","encode_col","file","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","read","wsname","SheetNames","ws","Sheets","sheet_to_json","header","raw","readAsArrayBuffer","ReactDOM","render","StrictMode","getElementById"],"mappings":"mQAkBeA,EAlBM,SAACC,GACpB,IAAMC,EAAW,SAACC,GAChBA,EAAIC,kBACJD,EAAIE,kBAQN,OACE,qBAAKC,UAAU,gBAAgBC,OAPlB,SAACJ,GACdA,EAAIC,kBACJD,EAAIE,iBACJ,IAAMG,EAAQL,EAAIM,aAAaD,MAC3BA,GAASA,EAAM,IAAIP,EAAMS,WAAWF,EAAM,KAGCG,YAAaT,EAAUU,WAAYV,EAAlF,SACGD,EAAMY,YC+BEC,EA5CG,SAACb,GAElB,IAAMc,EAAY,CACjB,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OAECC,KAAI,SAAUC,GACd,MAAO,IAAMA,KAEbC,KAAK,KAOP,OACC,sBAAMZ,UAAU,cAAhB,SACC,sBAAKA,UAAU,aAAf,UACC,oBAAIa,QAAQ,OAAZ,6BACA,uBAAOC,KAAK,OAAOd,UAAU,eAAee,GAAG,OAAOC,OAAQP,EAAWQ,SATvD,SAACC,GACrB,IAAMhB,EAAQgB,EAAEC,OAAOjB,MACnBA,GAASA,EAAM,IAAIP,EAAMS,WAAWF,EAAM,a,OC0EjCkB,EAvGE,SAACzB,GAAW,IAAD,EACC0B,oBAAS,GADV,mBACpBC,EADoB,KACZC,EADY,KAiE3B,OACC,qCACE5B,EAAM6B,KAAKC,OAAS,IAAMH,GAC1B,qBAAKtB,UAAU,mBAAf,SACC,wBAAQ0B,QAlEe,WAC1BH,GAAWD,GACXK,SAASC,iBAAiB,2CAA2CC,SAAQ,SAACX,GAC7EY,QAAQC,IAA+B,KAA3Bb,EAAEc,WAAWC,WACrBf,EAAEX,SAASkB,OAAS,GAAgC,MAA3BP,EAAEc,WAAWC,WACzCf,EAAEgB,mBACD,cADD,2CAEqChB,EAAEX,SAASkB,OAAS,EAFzD,YAGEP,EAAEX,SAAS,GAAG0B,UAHhB,sCAMAf,EAAEX,SAAS,GAAG4B,UACuB,KAA3BjB,EAAEc,WAAWC,WACvBf,EAAEX,SAAS,GAAG4B,YAIhBR,SAASS,cAAc,qDAAqDD,SAE5ER,SAASC,iBAAiB,2CAA2CC,SAAQ,SAACX,GACzEA,EAAEX,SAASkB,OAAS,IACvBP,EAAEmB,MAAMC,QAAU,WAIpBX,SAASS,cAAc,SAASG,aAAa,KAAM,kBAEnD,IAGIC,EAHYb,SAASS,cAAc,SAASK,UAGxBC,QAFN,yBACF,wCAEhBf,SAASS,cAAc,SAASK,UAAYD,EAE5Cb,SAASC,iBAAiB,UAAUC,SAAQ,SAACc,GAAD,OAC3CA,EAAMC,iBAAiB,SAAS,SAACC,GAChCA,EAAM1B,OAAO2B,UAAUC,OAAO,WAC9B,IAF0C,EAGtCC,EADgBH,EAAM1B,OAAO8B,WAAWA,WACR1C,SAHM,cAIzByC,GAJyB,IAI1C,2BAAkC,CAAC,IAA1BE,EAAyB,QAC7BA,EAAK3C,SAASkB,OAAS,IAC1ByB,EAAKb,MAAMC,QAAU,SANmB,8BAS1C,GAAqC,kBAAjCO,EAAM1B,OAAO2B,UAAUK,MAA2B,CAAC,IAAD,gBACpCH,GADoC,IACrD,2BAAkC,SAC5BX,MAAMC,QAAU,aAF+B,uCAuBrD,4BAGDhB,GACA,qBAAKtB,UAAU,iBAAf,SACC,wBACCoD,WAdkB,WACtBzB,SAASS,cAAc,QAAQH,UAAY,2BAcvCP,QArBoB,WACxB,IAAM2B,EAAW1B,SAASS,cAAc,mBACxCkB,UAAUC,UAAUC,UAAUH,EAASZ,WACvCd,SAASS,cAAc,QAAQH,UAAY,qBAmBvCjC,UAAU,MACVyD,wBAAsB,kBAJvB,uCAUF,qBAAKzD,UAAU,mBAAf,SACC,gCACC,gCACEL,EAAM6B,KAAKd,KAAI,SAACgD,EAAGC,GAAJ,OACf,6BACEhE,EAAMiE,KAAKlD,KAAI,SAACmD,GAAD,OACf,oBAAI7D,UAAU,KAAd,SACE0D,EAAEG,EAAEC,MADkBD,EAAEC,SAFnBH,gB,gBC/BDI,EArDI,WAAO,IAAD,EACE1C,mBAAS,CAAEG,KAAM,GAAIoC,KAAM,KAD7B,mBACjBI,EADiB,KACVC,EADU,KAGxBnC,QAAQC,IAAIiC,GAGZ,IAAME,EAAY,SAACC,GAGlB,IAFA,IAAIC,EAAI,GACPC,EAAIC,IAAKC,MAAMC,aAAaL,GAAQjD,EAAE2C,EAAI,EAClCF,EAAI,EAAGA,EAAIU,IAAKV,EAAGS,EAAET,GAAK,CAAEc,KAAMH,IAAKC,MAAMG,WAAWf,GAAIG,IAAKH,GAC1E,OAAOS,GAGFhE,EAAa,SAACuE,GAEnB,IAAMC,EAAS,IAAIC,WACbC,IAASF,EAAOG,mBACtBH,EAAOI,OAAS,SAAC9D,GAEhB,IAAM+D,EAAO/D,EAAEC,OAAO+D,OAChBC,EAAKb,IAAKc,KAAKH,EAAM,CAC1BnE,KAAMgE,EAAO,SAAW,UAInBO,EAASF,EAAGG,WAAW,GACvBC,EAAKJ,EAAGK,OAAOH,GAEf7D,EAAO8C,IAAKC,MAAMkB,cAAcF,EAAI,CAAEG,OAAQ,EAAGC,KAAK,IAC5D7D,QAAQC,IAAIoD,GAEZlB,EAAS,CAAEzC,KAAMA,EAAMoC,KAAMM,EAAUqB,EAAG,YAEvCT,EAAMF,EAAOG,mBAAmBJ,GAC/BC,EAAOgB,kBAAkBjB,IAG/B,OACC,eAAC,EAAD,CAAcvE,WAAYA,EAA1B,UACK4D,EAAMxC,MAAQ,EAAI,qBAAKxB,UAAU,OAAf,SACrB,qBAAKA,UAAU,YAAf,SACC,cAAC,EAAD,CAAWI,WAAYA,QAEhB,GACT,qBAAKJ,UAAU,OAAf,SACC,qBAAKA,UAAU,YAAf,SACC,cAAC,EAAD,CAAUwB,KAAMwC,EAAMxC,KAAMoC,KAAMI,EAAMJ,e,MC/C7CiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpE,SAASqE,eAAe,W","file":"static/js/main.9aad094d.chunk.js","sourcesContent":["const DragDropFile = (props) => {\r\n  const suppress = (evt) => {\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n  };\r\n  const onDrop = (evt) => {\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n    const files = evt.dataTransfer.files;\r\n    if (files && files[0]) props.handleFile(files[0]);\r\n  };\r\n  return (\r\n    <div className=\"box-container\" onDrop={onDrop} onDragEnter={suppress} onDragOver={suppress}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragDropFile;\r\n","const DataInput = (props) => {\r\n\t/* list of supported file types */\r\n\tconst SheetJSFT = [\r\n\t\t\"xlsx\",\r\n\t\t\"xlsb\",\r\n\t\t\"xlsm\",\r\n\t\t\"xls\",\r\n\t\t\"xml\",\r\n\t\t\"csv\",\r\n\t\t\"txt\",\r\n\t\t\"ods\",\r\n\t\t\"fods\",\r\n\t\t\"uos\",\r\n\t\t\"sylk\",\r\n\t\t\"dif\",\r\n\t\t\"dbf\",\r\n\t\t\"prn\",\r\n\t\t\"qpw\",\r\n\t\t\"123\",\r\n\t\t\"wb*\",\r\n\t\t\"wq*\",\r\n\t\t\"html\",\r\n\t\t\"htm\",\r\n\t]\r\n\t\t.map(function (x) {\r\n\t\t\treturn \".\" + x;\r\n\t\t})\r\n\t\t.join(\",\");\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tconst files = e.target.files;\r\n\t\tif (files && files[0]) props.handleFile(files[0]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className=\"form-inline\">\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<h2 htmlFor=\"file\">Add Excel Table</h2>\r\n\t\t\t\t<input type=\"file\" className=\"form-control\" id=\"file\" accept={SheetJSFT} onChange={handleChange} />\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default DataInput;\r\n","import { useState } from \"react\";\r\n\r\nconst OutTable = (props) => {\r\n\tconst [format, setFormat] = useState(false);\r\n\r\n\tconst formatTableHandler = () => {\r\n\t\tsetFormat(!format);\r\n\t\tdocument.querySelectorAll(\"tr:not(table > tbody > tr:nth-child(1))\").forEach((e) => {\r\n\t\t\tconsole.log(e.firstChild.innerHTML === \"\");\r\n\t\t\tif (e.children.length > 3 && e.firstChild.innerHTML !== \" \") {\r\n\t\t\t\te.insertAdjacentHTML(\r\n\t\t\t\t\t\"beforebegin\",\r\n\t\t\t\t\t`<tr class='eventDay'><td colspan=${e.children.length - 1}>${\r\n\t\t\t\t\t\te.children[0].innerHTML\r\n\t\t\t\t\t}</td><td class='arrow'></td></tr>`\r\n\t\t\t\t);\r\n\t\t\t\te.children[0].remove();\r\n\t\t\t} else if (e.firstChild.innerHTML !== \"\") {\r\n\t\t\t\te.children[0].remove();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdocument.querySelector(\"table > tbody > tr:nth-child(1) > td:nth-child(1)\").remove();\r\n\r\n\t\tdocument.querySelectorAll(\"tr:not(table > tbody > tr:nth-child(1))\").forEach((e) => {\r\n\t\t\tif (e.children.length > 2) {\r\n\t\t\t\te.style.display = \"none\";\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdocument.querySelector(\"table\").setAttribute(\"id\", \"schedule-table\");\r\n\r\n\t\tlet mainTable = document.querySelector(\"table\").outerHTML;\r\n\t\tlet regexString = /<tr class=\"eventDay\">/g;\r\n\t\tlet newString = '</tbody><tbody><tr class=\"eventDay\">';\r\n\t\tlet content = mainTable.replace(regexString, newString);\r\n\t\tdocument.querySelector(\"table\").outerHTML = content;\r\n\r\n\t\tdocument.querySelectorAll(\".arrow\").forEach((arrow) =>\r\n\t\t\tarrow.addEventListener(\"click\", (event) => {\r\n\t\t\t\tevent.target.classList.toggle(\"arrowOn\");\r\n\t\t\t\tlet elementParent = event.target.parentNode.parentNode;\r\n\t\t\t\tlet elementChildren = elementParent.children;\r\n\t\t\t\tfor (let elem of elementChildren) {\r\n\t\t\t\t\tif (elem.children.length > 2) {\r\n\t\t\t\t\t\telem.style.display = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (event.target.classList.value === \"arrow arrowOn\") {\r\n\t\t\t\t\tfor (let elem of elementChildren) {\r\n\t\t\t\t\t\telem.style.display = \"table-row\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst copyTableHandler = () => {\r\n\t\tconst copyText = document.querySelector(\"#schedule-table\");\r\n\t\tnavigator.clipboard.writeText(copyText.outerHTML);\r\n\t\tdocument.querySelector(\".btn\").innerHTML = \"Copied HTML Table\";\r\n\t};\r\n\r\n\tconst tooptipHandler = () => {\r\n\t\tdocument.querySelector(\".btn\").innerHTML = \"Copy Table to Clipboard\";\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{props.data.length > 0 && !format && (\r\n\t\t\t\t<div className=\"format-table-btn\">\r\n\t\t\t\t\t<button onClick={formatTableHandler}>Format Table</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{format && (\r\n\t\t\t\t<div className=\"copy-table-btn\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonMouseOut={tooptipHandler}\r\n\t\t\t\t\t\tonClick={copyTableHandler}\r\n\t\t\t\t\t\tclassName=\"btn\"\r\n\t\t\t\t\t\tdata-clipboard-target=\"#schedule-table\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCopy Table to Clipboard\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{props.data.map((r, i) => (\r\n\t\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t\t\t{props.cols.map((c) => (\r\n\t\t\t\t\t\t\t\t\t<td className=\"td\" key={c.key}>\r\n\t\t\t\t\t\t\t\t\t\t{r[c.key]}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default OutTable;\r\n","import React, { useState } from \"react\";\nimport DragDropFile from \"./DragDropFile\";\nimport DataInput from \"./DataInput\";\nimport OutTable from \"./OutTable\";\nimport XLSX from \"xlsx\";\n\nconst SheetJSApp = () => {\n\tconst [state, setState] = useState({ data: [], cols: [] });\n\n\tconsole.log(state);\n\n\t/* generate an array of column objects */\n\tconst make_cols = (refstr) => {\n\t\tlet o = [],\n\t\t\tC = XLSX.utils.decode_range(refstr).e.c + 1;\n\t\tfor (var i = 0; i < C; ++i) o[i] = { name: XLSX.utils.encode_col(i), key: i };\n\t\treturn o;\n\t};\n\n\tconst handleFile = (file /*:File*/) => {\n\t\t/* Boilerplate to set up FileReader */\n\t\tconst reader = new FileReader();\n\t\tconst rABS = !!reader.readAsBinaryString;\n\t\treader.onload = (e) => {\n\t\t\t/* Parse data */\n\t\t\tconst bstr = e.target.result;\n\t\t\tconst wb = XLSX.read(bstr, {\n\t\t\t\ttype: rABS ? \"binary\" : \"array\",\n\t\t\t\t// cellDates: true,\n\t\t\t});\n\t\t\t/* Get first worksheet */\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t/* Convert array of arrays */\n\t\t\tconst data = XLSX.utils.sheet_to_json(ws, { header: 1, raw: false });\n\t\t\tconsole.log(wb);\n\t\t\t/* Update state */\n\t\t\tsetState({ data: data, cols: make_cols(ws[\"!ref\"]) });\n\t\t};\n\t\tif (rABS) reader.readAsBinaryString(file);\n\t\telse reader.readAsArrayBuffer(file);\n\t};\n\n\treturn (\n\t\t<DragDropFile handleFile={handleFile}>\n      {state.data <= 0 ? <div className=\"row1\">\n\t\t\t\t<div className=\"col-xs-12\">\n\t\t\t\t\t<DataInput handleFile={handleFile} />\n\t\t\t\t</div>\n\t\t\t</div> : \"\"}\n\t\t\t<div className=\"row2\">\n\t\t\t\t<div className=\"col-xs-12\">\n\t\t\t\t\t<OutTable data={state.data} cols={state.cols} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</DragDropFile>\n\t);\n};\n\nexport default SheetJSApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SheetJSApp from \"./SheetJSApp\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SheetJSApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}