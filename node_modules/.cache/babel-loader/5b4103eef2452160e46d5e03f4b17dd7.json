{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alex\\\\Desktop\\\\cod\\\\excel-table-tool\\\\src\\\\OutTable.js\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OutTable = props => {\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //   }, 1000);\n  // }, [props.data.length]);\n  const formatTableHandler = () => {\n    document.querySelectorAll(\"tr\").forEach(e => {\n      if (e.children.length > 3 && e.firstChild.innerHTML !== \"\") {\n        e.insertAdjacentHTML(\"beforebegin\", `<tr class='eventDay'><td colspan=${e.children.length}>${e.children[0].innerHTML}</td><td class='arrow'></td></tr>`);\n        e.children[0].remove();\n      } else if (e.firstChild.innerHTML === \"\") {\n        e.children[0].remove();\n      } else {\n        return;\n      }\n    });\n    document.querySelectorAll(\"tr\").forEach(e => {\n      if (e.children.length > 2) {\n        e.style.display = \"none\";\n      }\n    });\n    document.querySelector(\"table\").setAttribute(\"id\", \"schedule-table\");\n    document.querySelector(\"table\").querySelectorAll(\".arrow\").forEach(arrow => arrow.addEventListener(\"click\", event => {\n      let ARROW = \"arrowOn\";\n      let element = event.target;\n      console.log(element);\n      let elementParent = element.parentNode.parentNode;\n      let elementChildren = elementParent.children;\n      element.classList.toggle(ARROW);\n\n      for (let elem of elementChildren) {\n        if (element.children.length > 2) {\n          elem.style.display = \"none\";\n        }\n      }\n\n      if (element.classList.value === \"arrow arrowOn\") {\n        for (let elem of elementChildren) {\n          if (element.style.display === \"none\") {\n            elem.style.display = \"table-row\";\n          }\n        }\n      }\n    }));\n    let mainTable = document.querySelector(\"table\").outerHTML;\n    let regexString = /<tr class=\"eventDay\">/g;\n    let newString = '</tbody><tbody><tr class=\"eventDay\">';\n    let content = mainTable.replace(regexString, newString);\n    document.querySelector(\"table\").outerHTML = content;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: formatTableHandler,\n      children: \"Format\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: props.data.map((r, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: props.cols.map(c => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td\",\n              children: r[c.key]\n            }, c.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this))\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = OutTable;\nexport default OutTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutTable\");","map":{"version":3,"sources":["C:/Users/alex/Desktop/cod/excel-table-tool/src/OutTable.js"],"names":["useEffect","useState","OutTable","props","formatTableHandler","document","querySelectorAll","forEach","e","children","length","firstChild","innerHTML","insertAdjacentHTML","remove","style","display","querySelector","setAttribute","arrow","addEventListener","event","ARROW","element","target","console","log","elementParent","parentNode","elementChildren","classList","toggle","elem","value","mainTable","outerHTML","regexString","newString","content","replace","data","map","r","i","cols","c","key"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst OutTable = (props) => {\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n  //   }, 1000);\r\n  // }, [props.data.length]);\r\n\r\n  const formatTableHandler = () => {\r\n    document.querySelectorAll(\"tr\").forEach((e) => {\r\n      if (e.children.length > 3 && e.firstChild.innerHTML !== \"\") {\r\n        e.insertAdjacentHTML(\r\n          \"beforebegin\",\r\n          `<tr class='eventDay'><td colspan=${e.children.length}>${e.children[0].innerHTML}</td><td class='arrow'></td></tr>`\r\n        );\r\n        e.children[0].remove();\r\n      } else if (e.firstChild.innerHTML === \"\") {\r\n        e.children[0].remove();\r\n      } else {\r\n        return;\r\n      }\r\n    });\r\n\r\n    document.querySelectorAll(\"tr\").forEach((e) => {\r\n      if (e.children.length > 2) {\r\n        e.style.display = \"none\";\r\n      }\r\n    });\r\n\r\n    document.querySelector(\"table\").setAttribute(\"id\", \"schedule-table\");\r\n\r\n    document\r\n      .querySelector(\"table\")\r\n      .querySelectorAll(\".arrow\")\r\n      .forEach((arrow) =>\r\n        arrow.addEventListener(\"click\", (event) => {\r\n          let ARROW = \"arrowOn\";\r\n          let element = event.target;\r\n          console.log(element);\r\n          let elementParent = element.parentNode.parentNode;\r\n          let elementChildren = elementParent.children;\r\n          element.classList.toggle(ARROW);\r\n          for (let elem of elementChildren) {\r\n            if (element.children.length > 2) {\r\n              elem.style.display = \"none\";\r\n            }\r\n          }\r\n          if (element.classList.value === \"arrow arrowOn\") {\r\n            for (let elem of elementChildren) {\r\n              if (element.style.display === \"none\") {\r\n                elem.style.display = \"table-row\";\r\n              }\r\n            }\r\n          }\r\n        })\r\n      );\r\n\r\n    let mainTable = document.querySelector(\"table\").outerHTML;\r\n    let regexString = /<tr class=\"eventDay\">/g;\r\n    let newString = '</tbody><tbody><tr class=\"eventDay\">';\r\n    let content = mainTable.replace(regexString, newString);\r\n    document.querySelector(\"table\").outerHTML = content;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button onClick={formatTableHandler}>Format</button>\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-striped\">\r\n          <tbody>\r\n            {props.data.map((r, i) => (\r\n              <tr key={i}>\r\n                {props.cols.map((c) => (\r\n                  <td className=\"td\" key={c.key}>\r\n                    {r[c.key]}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OutTable;\r\n"]},"metadata":{},"sourceType":"module"}